name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:

    - name: Check Out Repo
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ vars.RP_AWS_CRED_REGION }}
        role-to-assume: arn:aws:iam::${{ secrets.RP_AWS_CRED_ACCOUNT_ID }}:role/${{ vars.RP_AWS_CRED_BASE_ROLE_NAME }}${{ github.event.repository.name }}

    - name: Get secrets from AWS Secrets Manager
      uses: aws-actions/aws-secretsmanager-get-secrets@v2
      with:
        secret-ids: |
          ,sdlc/prod/github/cloudsmith
          ,sdlc/prod/github/dockerhub
        parse-json-secrets: true

    - name: Login to Amazon ECR Public
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registry-type: public

    - name: Free up some disk space on ubuntu
      if: ${{ runner.os == 'Linux' }}
      run: |
        # Workaround to provide additional free space for testing.
        #   https://github.com/actions/virtual-environments/issues/2840
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /usr/local/share/powershell
        sudo rm -rf "/opt/google/chrome"
        sudo rm -rf "/opt/microsoft/msedge"
        sudo rm -rf "/opt/microsoft/powershell"
        sudo rm -rf "/opt/pipx"
        sudo rm -rf "/usr/lib/mono"
        sudo rm -rf "/usr/local/julia*"
        sudo rm -rf "/usr/local/lib/node_modules"
        sudo rm -rf "/usr/local/share/chromium"
        sudo rm -rf "/usr/share/swift"
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"

    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.25.2

    - name: Install Microsoft Go
      run: |
        GO_VERSION=$(go version | cut -d' ' -f3 | cut -d'.' -f1,2)
        curl -sSLf -o "$RUNNER_TEMP/msgo.tgz" https://aka.ms/golang/release/latest/${GO_VERSION}.linux-amd64.tar.gz
        [[ -d "$RUNNER_TEMP/bin" ]] || install -d -m 0755 "$RUNNER_TEMP/bin"
        [[ -d "$RUNNER_TEMP/microsoft" ]] || install -d -m 0755 "$RUNNER_TEMP/microsoft"
        tar -C "$RUNNER_TEMP/microsoft" -xf "$RUNNER_TEMP/msgo.tgz"
        echo "$RUNNER_TEMP/bin" >> "$GITHUB_PATH"

    - name: Install patchelf
      run: sudo apt-get update && sudo apt-get install -y patchelf

    - name: Release Notes
      run: ./resources/scripts/release_notes.sh > ./release_notes.md

    - name: Write telemetry private key
      env:
        CONNECT_TELEMETRY_PRIV_KEY: ${{ secrets.TELEMETRY_PRIVATE_KEY }}
      run: |
        git update-index --skip-worktree ./internal/telemetry/key.pem
        echo "$CONNECT_TELEMETRY_PRIV_KEY" > ./internal/telemetry/key.pem

    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install cloudsmith CLI (for publishing Linux packages)
      run: pip install cloudsmith-cli

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKERHUB_USER }}
        password: ${{ env.DOCKERHUB_TOKEN }}

    - name: Install Buildx
      uses: docker/setup-buildx-action@v3

    - name: Write telemetry private key
      env:
        CONNECT_TELEMETRY_PRIV_KEY: ${{ secrets.TELEMETRY_PRIVATE_KEY }}
      run: |
        echo "Adding telemetry key"
        git update-index --skip-worktree ./internal/telemetry/key.pem
        echo "$CONNECT_TELEMETRY_PRIV_KEY" > ./internal/telemetry/key.pem

    - name: GoReleaser
      uses: goreleaser/goreleaser-action@v6
      with:
        args: release --release-notes=./release_notes.md --timeout 120m
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CLOUDSMITH_API_KEY: ${{ env.CLOUDSMITH_API_KEY }}
