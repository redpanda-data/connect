{{define "parameters" -}}
{{if gt (len .Definitions) 0}}
==== Parameters

{{range $i, $param := .Definitions -}}
*`{{$param.Name}}`* &lt;{{if $param.IsOptional}}(optional) {{end}}{{$param.ValueType}}{{if $param.DefaultMarshalled}}, default `{{$param.DefaultMarshalled}}`{{end}}&gt; {{$param.Description}}  
{{end -}}
{{end -}}
{{end -}}

{{define "method_example" -}}
{{if gt (len .Summary) 0 -}}
{{.Summary}}

{{end -}}

```coffeescript
{{.Mapping}}
{{range $i, $result := .Results}}
# In:  {{index $result 0}}
# Out: {{index $result 1}}
{{end -}}
```
{{end -}}

{{define "method_spec" -}}
=== `{{.Name}}`

{{if eq .Status "beta" -}}
[CAUTION]
====
This method is mostly stable but breaking changes could still be made outside of major version releases if a fundamental problem with it is found.
====
{{end -}}
{{if eq .Status "experimental" -}}
[CAUTION]
.Experimental
====
This method is experimental and therefore breaking changes could be made to it outside of major version releases.
====
{{end -}}
{{.Description}}{{if gt (len .Version) 0}}

Introduced in version {{.Version}}.
{{end}}
{{template "parameters" .Params -}}
{{if gt (len .Examples) 0}}
==== Examples

{{range $i, $example := .Examples}}
{{template "method_example" $example -}}
{{end -}}
{{end -}}

{{end -}}

= Bloblang Methods
:description: A list of Bloblang methods


////
     THIS FILE IS AUTOGENERATED!

     To make changes please edit the contents of:

     https://github.com/redpanda-data/connect/tree/main/cmd/tools/docs_gen/templates/bloblang_methods.adoc.tmpl
////

// Â© 2024 Redpanda Data Inc.


Methods provide most of the power in Bloblang as they allow you to augment values and can be added to any expression (including other methods):

```coffeescript
root.doc.id = this.thing.id.string().catch(uuid_v4())
root.doc.reduced_nums = this.thing.nums.map_each(num -> if num < 10 {
  deleted()
} else {
  num - 10
})
root.has_good_taste = ["pikachu","mewtwo","magmar"].contains(this.user.fav_pokemon)
```

Methods support both named and nameless style arguments:

```coffeescript
root.foo_one = this.(bar | baz).trim().replace_all(old: "dog", new: "cat")
root.foo_two = this.(bar | baz).trim().replace_all("dog", "cat")
```

{{if gt (len .General) 0 -}}
== General

{{range $i, $spec := .General -}}
{{template "method_spec" $spec}}
{{end -}}
{{end -}}

{{range $i, $cat := .Categories -}}
== {{$cat.Name}}

{{range $i, $spec := $cat.Specs -}}
{{template "method_spec" $spec}}
{{end -}}
{{end -}}
