// Copyright 2025 Redpanda Data, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package redpanda.runtime.v1alpha1;

option go_package = "github.com/redpanda-data/connect/v4/internal/rpcplugin/runtimepb";

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

// `NullValue` is a representation of a null value.
enum NullValue {
  NULL_VALUE = 0;
}

// `StructValue` represents a struct value which can be used to represent a
// structured data value.
message StructValue { map<string, Value> fields = 1; }

// `ListValue` represents a list value which can be used to represent a list of
// values.
message ListValue { repeated Value values = 1; }

// `Value` represents a dynamically typed value which can be used to represent
// a value within a Redpanda Connect pipeline.
message Value {
  oneof kind {
    NullValue null_value = 1;
    string string_value = 2;
    int64 integer_value = 3;
    double double_value = 4;
    bool bool_value = 5;
    google.protobuf.Timestamp timestamp_value = 6;
    bytes bytes_value = 7;
    StructValue struct_value = 8;
    ListValue list_value = 9;
  }
}

// An error in the context of a data pipeline.
message Error {
  // The error message. If non empty, then the error is valid and
  // if empty the error is ignored as if a success (due to proto3 empty
  // semantics).
  string message = 1;
  // NotConnected is returned by inputs and outputs when their Read or
  // Write methods are called and the connection that they maintain is lost.
  // This error prompts the upstream component to call Connect until the
  // connection is re-established.
  message NotConnected {}
  // EndOfInput is returned by inputs that have exhausted their source of
  // data to the point where subsequent Read calls will be ineffective. This
  // error prompts the upstream component to gracefully terminate the
  // pipeline.
  message EndOfInput {}
  // Additional error details for specific Redpanda Connect behavior.
  // If one of these fields is set, then message must be non-empty.
  oneof detail {
    // BackOff is an error that plugins can optionally wrap another error with
    // which instructs upstream components to wait for a specified period of
    // time before retrying the errored call.
    //
    // Only supported by Connect methods in the Input and Output services.
    google.protobuf.Duration backoff = 2;
    NotConnected not_connected = 3;
    EndOfInput end_of_input = 4;
  }
}

// Message represents a piece of data or an event that flows through the
// runtime.
message Message {
  oneof payload {
    bytes bytes = 1;
    Value structured = 2;
  }
  StructValue metadata = 3;
  Error error = 4;
}

message MessageBatch { repeated Message messages = 1; }
