---
project_name: redpanda-connect
version: 2
builds:
  - id: connect
    main: cmd/redpanda-connect/main.go
    binary: redpanda-connect
    goos: [ windows, darwin, linux, freebsd, openbsd ]
    goarch: [ amd64, arm64 ]
    # goarm: [ 6, 7 ]
    hooks:
      post:
        # The binary is signed and notarized when running a production release, but for snapshot builds notarization is
        # skipped and only ad-hoc signing is performed (not cryptographic material is needed).
        #
        # note: environment variables required for signing and notarization (set in CI) but are not needed for snapshot builds
        #    QUILL_SIGN_P12, QUILL_SIGN_PASSWORD, QUILL_NOTARY_KEY, QUILL_NOTARY_KEY_ID, QUILL_NOTARY_ISSUER
        - cmd: ./resources/scripts/sign_for_darwin.sh "{{ .Os }}" "{{ .Path }}" "{{ .IsSnapshot }}"
          env:
            - QUILL_LOG_FILE=target/dist/quill-{{ .Target }}.log
    ignore:
      - goos: windows
        goarch: arm
      - goos: darwin
        goarch: arm
    env:
      - CGO_ENABLED=0
    ldflags: >
      -s -w
      -X main.Version={{.Version}}
      -X main.DateBuilt={{.Date}}
      -X main.BinaryName=redpanda-connect
      -X github.com/redpanda-data/connect/v4/internal/telemetry.ExportHost={{ if index .Env "CONNECT_TELEMETRY_HOST"  }}{{ .Env.CONNECT_TELEMETRY_HOST }}{{ else }}{{ end }}
      -X github.com/redpanda-data/connect/v4/internal/telemetry.ExportDelay={{ if index .Env "CONNECT_TELEMETRY_DELAY"  }}{{ .Env.CONNECT_TELEMETRY_DELAY }}{{ else }}{{ end }}
      -X github.com/redpanda-data/connect/v4/internal/telemetry.ExportPeriod={{ if index .Env "CONNECT_TELEMETRY_PERIOD"  }}{{ .Env.CONNECT_TELEMETRY_PERIOD }}{{ else }}{{ end }}

  - id: connect-fips
    main: cmd/redpanda-connect/main.go
    binary: redpanda-connect-fips
    goos: [ linux ]
    goarch: [ amd64 ]
    hooks:
      post:
        - cmd: ./resources/scripts/fips_patchelf.sh "{{ .Path }}"
    tool: 'microsoft-go'
    env:
      - GOEXPERIMENT=systemcrypto
      - CGO_ENABLED=1
    ldflags:
      -s -w
      -X main.Version={{.Version}}
      -X main.DateBuilt={{.Date}}
      -X main.BinaryName=redpanda-connect-fips
      -X github.com/redpanda-data/connect/v4/internal/telemetry.ExportHost={{ if index .Env "CONNECT_TELEMETRY_HOST"  }}{{ .Env.CONNECT_TELEMETRY_HOST }}{{ else }}{{ end }}
      -X github.com/redpanda-data/connect/v4/internal/telemetry.ExportDelay={{ if index .Env "CONNECT_TELEMETRY_DELAY"  }}{{ .Env.CONNECT_TELEMETRY_DELAY }}{{ else }}{{ end }}
      -X github.com/redpanda-data/connect/v4/internal/telemetry.ExportPeriod={{ if index .Env "CONNECT_TELEMETRY_PERIOD"  }}{{ .Env.CONNECT_TELEMETRY_PERIOD }}{{ else }}{{ end }}

  - id: connect-cloud
    main: cmd/redpanda-connect-cloud/main.go
    binary: redpanda-connect
    goos: [ darwin, linux ]
    goarch: [ amd64, arm64 ]
    env:
      - CGO_ENABLED=0
    ldflags: >
      -s -w
      -X main.Version={{.Version}}
      -X main.DateBuilt={{.Date}}
      -X main.BinaryName=redpanda-connect

  - id: connect-lambda
    main: cmd/serverless/connect-lambda/main.go
    binary: redpanda-connect-lambda
    env:
      - CGO_ENABLED=0
    goos: [ linux ]
    goarch: [ amd64 ]

  - id: connect-lambda-al2
    main: cmd/serverless/connect-lambda/main.go
    binary: bootstrap
    env:
      - CGO_ENABLED=0
    goos: [ linux ]
    goarch: [ amd64, arm64 ]

archives:
  - id: connect
    ids: [ connect ]
    formats: tar.gz
    files:
      - README.md
      - CHANGELOG.md
      - licenses

  - id: connect-fips
    ids: [ connect-fips ]
    formats: tar.gz
    name_template: 'redpanda-connect-fips_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
    files:
      - README-FIPS.md
      - CHANGELOG.md
      - licenses

  - id: connect-cloud
    ids: [ connect-cloud ]
    formats: tar.gz
    name_template: 'redpanda-connect-cloud_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
    files:
      - README.md
      - CHANGELOG.md
      - licenses

  - id: connect-lambda
    ids: [ connect-lambda ]
    formats: zip
    name_template: "{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

  - id: connect-lambda-al2
    ids: [ connect-lambda-al2 ]
    formats: zip
    name_template: "redpanda-connect-lambda-al2_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

dist: target/dist
release:
  github:
    owner: redpanda-data
    name: connect
  prerelease: auto
  disable: false

nfpms:
  - id: connect-linux-pkgs
    description: Redpanda Connect is a high performance and resilient stream processor.
    package_name: redpanda-connect
    file_name_template: "{{ .ConventionalFileName }}"
    # this is the default value, but specifying explicitly it relates to the symlink creation below
    bindir: /usr/bin
    contents:
      - src: /usr/bin/redpanda-connect
        dst: /usr/bin/.rpk.ac-connect
        type: symlink
    ids:
      - connect
    vendor: Redpanda Data, Inc.
    license: "https://github.com/redpanda-data/connect/blob/main/licenses/README.md"
    homepage: redpanda.com
    maintainer: Redpanda Data <support@redpanda.com>
    formats:
      - deb
      - rpm
  - id: connect-fips-pkgs
    description: Redpanda Connect FIPS is a high performance and resilient stream processor.
    package_name: redpanda-connect-fips
    file_name_template: "{{ .ConventionalFileName }}"
    bindir: /opt/redpanda/libexec
    contents:
      - src: resources/scripts/fips_wrapper.sh
        dst: /usr/bin/redpanda-connect-fips
        file_info:
          mode: 0755
          owner: root
          group: root
      # installs an alias so users can type `rpk connect`
      - src: /opt/redpanda/libexec/redpanda-connect-fips
        dst: /usr/bin/.rpk.ac-connect
        type: symlink
    dependencies:
      - redpanda-rpk-fips
    ids:
      - connect-fips
    vendor: Redpanda Data, Inc.
    license: "https://github.com/redpanda-data/connect/blob/main/licenses/README.md"
    homepage: redpanda.com
    maintainer: Redpanda Data <support@redpanda.com>
    formats:
      - deb
      - rpm

publishers:
  # Gets run once per artifact (deb or rpm)
  - name: Publish Linux packages to Cloudsmith
    ids:
      - connect-linux-pkgs
      - connect-fips-pkgs
    cmd: ./resources/scripts/push_pkg_to_cloudsmith.sh {{ .ArtifactPath }} {{ .Version }}
    env:
      - CLOUDSMITH_API_KEY={{ .Env.CLOUDSMITH_API_KEY }}
