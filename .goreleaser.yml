project_name: redpanda-connect
version: 1
builds:
  - id: connect
    main: cmd/redpanda-connect/main.go
    binary: redpanda-connect
    goos: [ windows, darwin, linux, freebsd, openbsd ]
    goarch: [ amd64, arm, arm64 ]
    goarm: [ 6, 7 ]
    hooks:
      post:
        # The binary is signed and notarized when running a production release, but for snapshot builds notarization is
        # skipped and only ad-hoc signing is performed (not cryptographic material is needed).
        #
        # note: environment variables required for signing and notarization (set in CI) but are not needed for snapshot builds
        #    QUILL_SIGN_P12, QUILL_SIGN_PASSWORD, QUILL_NOTARY_KEY, QUILL_NOTARY_KEY_ID, QUILL_NOTARY_ISSUER
        - cmd: ./resources/scripts/sign_for_darwin.sh "{{ .Os }}" "{{ .Path }}" "{{ .IsSnapshot }}"
          env:
            - QUILL_LOG_FILE=target/dist/quill-{{ .Target }}.log
    ignore:
      - goos: windows
        goarch: arm
      - goos: darwin
        goarch: arm
    env:
      - CGO_ENABLED=0
    ldflags: >
      -s -w
      -X main.Version={{.Version}}
      -X main.DateBuilt={{.Date}}
      -X main.BinaryName=redpanda-connect

  - id: connect-cloud
    main: cmd/redpanda-connect-cloud/main.go
    binary: redpanda-connect
    goos: [ windows, darwin, linux, freebsd, openbsd ]
    goarch: [ amd64, arm, arm64 ]
    goarm: [ 6, 7 ]
    ignore:
      - goos: windows
        goarch: arm
      - goos: darwin
        goarch: arm
    env:
      - CGO_ENABLED=0
    ldflags: >
      -s -w
      -X main.Version={{.Version}}
      -X main.DateBuilt={{.Date}}
      -X main.BinaryName=redpanda-connect

  - id: connect-community
    main: cmd/redpanda-connect-community/main.go
    binary: redpanda-connect
    goos: [ windows, darwin, linux, freebsd, openbsd ]
    goarch: [ amd64, arm, arm64 ]
    goarm: [ 6, 7 ]
    ignore:
      - goos: windows
        goarch: arm
      - goos: darwin
        goarch: arm
    env:
      - CGO_ENABLED=0
    ldflags: >
      -s -w
      -X main.Version={{.Version}}
      -X main.DateBuilt={{.Date}}
      -X main.BinaryName=redpanda-connect

  - id: connect-lambda
    main: cmd/serverless/connect-lambda/main.go
    binary: redpanda-connect-lambda
    env:
      - CGO_ENABLED=0
    goos: [ linux ]
    goarch: [ amd64 ]

  - id: connect-lambda-al2
    main: cmd/serverless/connect-lambda/main.go
    binary: bootstrap
    env:
      - CGO_ENABLED=0
    goos: [ linux ]
    goarch: [ amd64, arm64 ]

archives:
  - id: connect
    builds: [ connect ]
    format: tar.gz
    files:
      - README.md
      - CHANGELOG.md
      - licenses

  - id: connect-cloud
    builds: [ connect-cloud ]
    format: tar.gz
    name_template: 'redpanda-connect-cloud_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
    files:
      - README.md
      - CHANGELOG.md
      - licenses

  - id: connect-community
    builds: [ connect-community ]
    format: tar.gz
    name_template: 'redpanda-connect-community_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
    files:
      - README.md
      - CHANGELOG.md
      - licenses

  - id: connect-lambda
    builds: [ connect-lambda ]
    format: zip
    name_template: "{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

  - id: connect-lambda-al2
    builds: [ connect-lambda-al2 ]
    format: zip
    name_template: "redpanda-connect-lambda-al2_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

dist: target/dist
release:
  github:
    owner: redpanda-data
    name: connect
  prerelease: auto
  disable: false
